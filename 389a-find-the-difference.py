"""
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more
letter at a random position.

Return the letter that was added to t.

Constraints:
    0 <= s.length <= 1000
    t.length == s.length + 1
    s and t consist of lowercase English letters.
"""


class Solution:
    def findTheDifference_loop(self, s: str, t: str) -> str:
        sum_ords = 0
        for i in range(len(s)):
            sum_ords += ord(t[i]) - ord(s[i])
        sum_ords += ord(t[-1])
        return chr(sum_ords)

    def findTheDifference_functional(self, s: str, t: str) -> str:
        def sum_chars(s: str) -> int:
            return sum(map(ord, s))

        return chr(sum_chars(t) - sum_chars(s))


def test_solution():
    """test"""

    funcs = [
        Solution().findTheDifference_loop,
        Solution().findTheDifference_functional,
    ]

    # fmt: off
    data = [
        ['abcd', 'abcde', 'e'],
        ['', 'y', 'y'],
    ]
    # fmt: on

    for s, t, expected in data:
        for func in funcs:
            assert func(s, t) == expected


if __name__ == "__main__":
    pass
